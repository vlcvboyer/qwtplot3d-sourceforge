/*
  This file contains NO source code, just some documentation for doxygen to
  parse.
*/

/*!
  \mainpage %QwtPlot3D User's Guide

  \image html plot3d.jpg


	\section news News
	
	- Apr 15 2003: simpleplot packages to  
	<a href="http://sourceforge.net/project/showfiles.php?group_id=78209&release_id=152653">release 0.1 alpha</a> added
	- Apr 14 2003: CVS: added qwt independent example 
	<a href="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/qwtplot3d/qwtplot3d/examples/simpleplot">simpleplot</a> 

  \section screenshotsonmainpage Screenshots
  
  Screenshots are on a separate page, \ref screenshots.

	\section features Features 

   -# Scaling, rotating, shifting, zooming of data sets and mathematical functions (see \ref datatopics)
   -# Resolution changing on the fly
   -# Reading from MESH data files :See the 'examples/data' directory and NativeReader documentation
   for this . You will find example datasets <a href="http://sourceforge.net/projects/qwtplot3d">here</a> 
   -# Flat (2D) labeling
 	 -# Wireframe, filled polygons, hidden line (improvement necessary)
 	 -# On floor projections (isolines, data)
	 -# Autoscalable axes	
	 -# Free color model
	 -# Save widget content to pixmap file
 		
 		
 	\section todo Todo
 	 
 	 Next release:
 	 
 	 -# More topic specific examples
 	 -# Autoswitching axes scales (axes in front should automatically get a scale)
 	 -# General input interface for matrix-like data structures (all the things representable as <tt> data[i][j] </tt> and suiting iterators)
 	 -# Reader plugin (Interface to other data sources)
	 -# Input: FEM files providing nodes and triangulation 
 	 -# Performance (reading)
 	 -# Documentation improvement 
 	 -# Finish isoline contouring  

	
	 Subsequent releases:

	 -# Native Delaunay triangulation for <tt>(x,y,z)</tt>-triples with irregularly distributed <tt>(x,y)</tt>-tuples )	 
 	 -# Interactive mouse handling (picking)
 	 -# Grey scale (PGM) file format native
 	 -# Configurable illumination model	
 	 -# Labeling and proper scaling (mipmapping) of user defined pixmaps (i.e. TeX/DVI screenshots)
 	 -# Math function parser ? 	 
 	 
 	 
 	 <b>  ...Proposals !	</b>

	<BR>
	\section conventionsonmainpage Using conventions
	You should be aware of some limitations for your data: See \ref conventions

  \section downloads Downloads
  Stable releases, prereleases and snapshots are available at <a href="http://sourceforge.net/projects/qwtplot3d">sourceforge</a>.
	<br>Nightly CVS tarballs can be found 
  <a href="http://cvs.sourceforge.net/cvstarballs/qwtplot3d-cvsroot.tar.gz">here</a>.

  Anonymous CVS is also available:
  \code
cvs -d:pserver:anonymous@cvs.qwtplot3d.sourceforge.net:/cvsroot/qwtplot3d login
cvs -z3 -d:pserver:anonymous@cvs.qwtplot3d.sourceforge.net:/cvsroot/qwtplot3d co qwtplot3d
  \endcode

  \section changesonmainpage Change log
  The change log is on a separate page, \ref changes.

  \section installonmainpage Installation
  Install notes are on a separate page, \ref install.
  
  \section author Author:
	Micha Bieber \<krischnamurti_a-t_users_sourceforge_net\>

*/

/*!
  \page install Installation

	For now, QwtPlot3d is not part of <a href="http://qwt.sourceforge.net">Qwt</a> and the library is completely independent of the 
	latter. The example application still needs an installed Qwt (and perhaps his Qt Designer plugin, see
	also the remarks in 'examples/Mesh2/Mesh2.pro'). If uic creates a 'mesh2mainwindowbase.cpp' and you have no Qwt Designer plugin installed, 
	the compiler will miss the following statements in mesh2mainwindowbase.cpp: 
	\verbatim
	#include <qwt_slider.h>
	#include <qwt_wheel.h>
	\endverbatim
	In this case, add them manually.
	
	With qwtplot3d.pro you can create a static library VC6 project for windows and a shared library for POSIX systems. I will change
	the Windows type to DLL in the future.
	
	QwtPlot3D has been tested with Qt version 3.0.5 for Windows and with version 3.1.? on Debian Linux. Older Qt versions are likely working.
	If I'm wrong with the latter guess, please don't hesitate to contact me. I'll try to provide a code fix in this case. 
	
	The library requires OpenGL >= 1.1 and a true color mode with 24 or 32 bits color depth.
*/


/*!
  \page screenshots Screenshots

  \latexonly Screenshots are only available in the HTML docs.\endlatexonly

  \image html simpleapp2.png "Example Application (Windows 2000)"
  \image html simpleapp3.png "Other View (Debian/KDE)"
  \image html zooming.png "Zooming"

*/

/*!
  \page datatopics Data Input Topics

	QwtPlot3D supports two special forms of native data input:
	
  \par Mesh data files:
  
  You can read a special simple form of ASCII files containing z-values and domain information, organized in the following
  way (C++ comments only for this documentation):
  
  \verbatim
   jk:11051895-17021986                                              // magic string
   MESH                                                              // MESH file (other keywords in future versions)
   327 466                                                           // x,y grid
   557726 567506                                                     // domain boundaries (x values)
   5.10821e+006 5.12216e+006                                         // domain boundaries (y values)
   682 682 682 682 912 924 928 928 932 ... element[327*466-1]        // the single z values 
  \endverbatim 
  
  See NativeReader for additional information.
  
  \par Mathematical functions:
  
  Setup a function object. To do so, inherit from the Function class and 
  write your own version of Function::operator()(double x, double y)
  Set the domain and perhaps limitations for the range and call Function::create().
  Thats all.
  
	See also Function and the implementation of concrete functions in examples/Mesh2/functions.h

	A more general approach is provided by QwtPlot3D::createInternalRepresentation(). I'll extend this in the future.

*/

/*!
\page changes Changelog   
 	
\par Changes:

Apr 17 2003: 
- Autoswitching for axes labeling (not yet perfect, but working for the most relevant cases - try the animation in Mesh2)
  CoordinateSystem::setAutoDecoration()
  
Apr 14 2003: 
- QwtPlot3D ctor with default values for all arguments - simpleplot adapted
- CVS: added qwt independent example examples/simpleplot
<a href="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/qwtplot3d/qwtplot3d/examples/simpleplot">see here</a>

\par Bugfixes:

Apr 17 2003: 
- some values close to zero caused problems 
(\ref conventions)

Apr 14 2003: 
- pending CreateFunction declaration from Mesh2/functions.h removed
	
*/

/*!
\page conventions Conventions   

Some calculations are performed as accurate as DBL_EPSILON (see your float.h for the precise value). Smaller values are considered to be zero. 
Besides the fact that this is stretchable in some cases to DBL_MIN (see e.g.
<a href="http://groups.google.com/groups?hl=en&lr=&ie=UTF-8&oe=UTF-8&threadm=6odqk1%24p23%241%40nnrp1.dejanews.com&rnum=1&prev=/groups%3Fq%3DFLT_EPSILON%26hl%3Den%26lr%3D%26ie%3DUTF-8%26oe%3DUTF-8%26selm%3D6odqk1%2524p23%25241%2540nnrp1.dejanews.com%26rnum%3D1"> 
this topic related discussion</a>), for simplicity reasons not only differences have been restricted to this value but all values.

*/